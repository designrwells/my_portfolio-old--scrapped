{"ast":null,"code":"import { TimelineMax as Timeline, Power1 } from 'gsap';\n\nconst getDefaultTimeline = (node, delay) => {\n  const timeline = new Timeline({\n    paused: true\n  });\n  const content = node.querySelector('.content');\n  const contentInner = node.querySelector('.content--inner');\n  timeline.from(node, .75, {\n    display: 'none',\n    autoAlpha: 0,\n    delay,\n    ease: Power1.easeIn\n  }).from(content, 0.15, {\n    autoAlpha: 0,\n    y: 25,\n    ease: Power1.easeInOut\n  }).from(contentInner, 0.15, {\n    autoAlpha: 0,\n    delay: 0.15,\n    ease: Power1.easeIn\n  });\n  return timeline;\n};\n\nconst getHomeTimeline = (node, delay) => {\n  const timeline = new Timeline({\n    paused: true\n  });\n  const texts = node.querySelectorAll('h1 > div');\n  timeline.from(node, 1, {\n    display: 'none',\n    autoAlpha: 0,\n    delay\n  }).staggerFrom(texts, 0.375, {\n    autoAlpha: 0,\n    x: -25,\n    ease: Power1.easeOut\n  }, 0.125);\n  return timeline;\n};\n\nconst getAboutTimeline = (node, delay) => {\n  const timeline = new Timeline({\n    paused: true\n  });\n  const octopusLeftSide = node.querySelectorAll('.about-block-left');\n  const octopusRightSide = node.querySelectorAll('.about-block-right');\n  timeline.from(node, 1, {\n    display: 'none',\n    autoAlpha: 0,\n    delay\n  }).from(octopusLeftSide, 0.375, {\n    autoAlpha: 0,\n    y: 600,\n    ease: Power1.easeOut\n  }, 0.125).from(octopusRightSide, 0.375, {\n    autoAlpha: 0,\n    y: 600,\n    ease: Power1.easeOut\n  }, '-=0.125');\n  return timeline;\n};\n\nexport const play = (pathname, node, appears) => {\n  const delay = appears ? 0 : 0.5;\n  let timeline;\n  if (pathname === '/') timeline = getHomeTimeline(node, delay);else if (pathname === '/about') timeline = getAboutTimeline(node, delay);else timeline = getDefaultTimeline(node, delay);\n  window.loadPromise.then(() => requestAnimationFrame(() => timeline.play()));\n};\nexport const exit = node => {\n  const timeline = new Timeline({\n    paused: true\n  });\n  timeline.to(node, 0.15, {\n    autoAlpha: 0,\n    ease: Power1.easeOut\n  });\n  timeline.play();\n};","map":{"version":3,"sources":["C:/Users/dwells/Desktop/my_portfolio/src/timelines/index.js"],"names":["TimelineMax","Timeline","Power1","getDefaultTimeline","node","delay","timeline","paused","content","querySelector","contentInner","from","display","autoAlpha","ease","easeIn","y","easeInOut","getHomeTimeline","texts","querySelectorAll","staggerFrom","x","easeOut","getAboutTimeline","octopusLeftSide","octopusRightSide","play","pathname","appears","window","loadPromise","then","requestAnimationFrame","exit","to"],"mappings":"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","sourcesContent":["import { TimelineMax as Timeline, Power1 } from 'gsap';\r\n\r\nconst getDefaultTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  const content = node.querySelector('.content');\r\n  const contentInner = node.querySelector('.content--inner');\r\n\r\n  timeline\r\n    .from(node, .75, { display: 'none', autoAlpha: 0, delay, ease: Power1.easeIn })\r\n    .from(content, 0.15, { autoAlpha: 0, y: 25, ease: Power1.easeInOut })\r\n    .from(contentInner, 0.15, { autoAlpha: 0, delay: 0.15, ease: Power1.easeIn });\r\n\r\n  return timeline;\r\n}\r\n\r\nconst getHomeTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  const texts = node.querySelectorAll('h1 > div');\r\n\r\n  timeline\r\n    .from(node, 1, { display: 'none', autoAlpha: 0, delay })\r\n    .staggerFrom(texts, 0.375, { autoAlpha: 0, x: -25, ease: Power1.easeOut }, 0.125);\r\n\r\n  return timeline;\r\n}\r\n\r\nconst getAboutTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  const octopusLeftSide = node.querySelectorAll('.about-block-left');\r\n  const octopusRightSide = node.querySelectorAll('.about-block-right');\r\n\r\n  timeline\r\n    .from(node, 1, { display: 'none', autoAlpha: 0, delay })\r\n    .from(octopusLeftSide, 0.375, { autoAlpha: 0, y: 600 , ease: Power1.easeOut }, 0.125)\r\n    .from(octopusRightSide, 0.375, { autoAlpha: 0, y: 600 , ease: Power1.easeOut }, '-=0.125');\r\n\r\n  return timeline;\r\n}\r\n\r\nexport const play = (pathname, node, appears) => {\r\n  const delay = appears ? 0 : 0.5;\r\n  let timeline\r\n\r\n  if (pathname === '/')\r\n    timeline = getHomeTimeline(node, delay);\r\n  else if (pathname === '/about')\r\n    timeline = getAboutTimeline(node, delay);\r\n  else \r\n    timeline = getDefaultTimeline(node, delay);\r\n\r\n  window\r\n    .loadPromise\r\n    .then(() => requestAnimationFrame(() => timeline.play()))\r\n}\r\n\r\nexport const exit = (node) => {\r\n  const timeline = new Timeline({ paused: true });\r\n\r\n  timeline.to(node, 0.15, { autoAlpha: 0, ease: Power1.easeOut });\r\n  timeline.play();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}