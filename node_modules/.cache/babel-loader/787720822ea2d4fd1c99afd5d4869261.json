{"ast":null,"code":"import { TimelineMax as Timeline, Power1 } from 'gsap';\n\nconst getHomeTimeline = (node, delay) => {\n  const timeline = new Timeline({\n    paused: true\n  });\n  const bodyHome = document.querySelector('body');\n  const text1 = node.querySelector('#intro-text-one');\n  const text2 = node.querySelector('#intro-text-two');\n  const text3 = node.querySelector('#intro-text-three');\n  timeline.from(node, 1, {\n    display: 'none',\n    autoAlpha: 0,\n    delay\n  }).to(bodyHome, 2, {\n    backgroundColor: '#444444'\n  }, '-=2').staggerFrom(text1, .7, {\n    autoAlpha: 0,\n    x: -25,\n    ease: Power1.easeOut\n  }, 2).staggerFrom(text2, 1, {\n    autoAlpha: 0,\n    x: -55,\n    ease: Power1.easeOut\n  }, 5, 3).staggerFrom(text3, 3, {\n    autoAlpha: 0,\n    x: -25,\n    ease: Power1.easeOut\n  }, 5, 5);\n  return timeline;\n};\n\nconst getAboutTimeline = (node, delay) => {\n  const timeline = new Timeline({\n    paused: true\n  });\n  const octopusLeftSide = node.querySelector('.about-block-left');\n  const octopusRightSide = node.querySelector('.about-block-right');\n  const bodyAbout = document.querySelector('body');\n  timeline.from(node, 1, {\n    display: 'none',\n    autoAlpha: 0,\n    delay\n  }).to(bodyAbout, 2, {\n    backgroundColor: '#0C0C21'\n  }, '-=2').from(octopusLeftSide, 0.275, {\n    autoAlpha: 0,\n    y: 650,\n    ease: Power1.easeOut\n  }).from(octopusRightSide, 0.275, {\n    autoAlpha: 0,\n    y: 650,\n    ease: Power1.easeOut\n  }, '-=0.275');\n  return timeline;\n};\n\nexport const play = (pathname, node, appears) => {\n  const delay = appears ? 0 : 0.5;\n  let timeline;\n  if (pathname === '/') timeline = getHomeTimeline(node, delay);else if (pathname === '/about') timeline = getAboutTimeline(node, delay);else timeline = getHomeTimeline(node, delay);\n  window.loadPromise.then(() => requestAnimationFrame(() => timeline.play()));\n};\nexport const exit = node => {\n  const timeline = new Timeline({\n    paused: true\n  });\n  timeline.to(node, 0.15, {\n    autoAlpha: 0,\n    ease: Power1.easeOut\n  });\n  timeline.play();\n};","map":{"version":3,"sources":["C:/Users/iceme/Desktop/my_portfolio/src/timelines/index.js"],"names":["TimelineMax","Timeline","Power1","getHomeTimeline","node","delay","timeline","paused","bodyHome","document","querySelector","text1","text2","text3","from","display","autoAlpha","to","backgroundColor","staggerFrom","x","ease","easeOut","getAboutTimeline","octopusLeftSide","octopusRightSide","bodyAbout","y","play","pathname","appears","window","loadPromise","then","requestAnimationFrame","exit"],"mappings":"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","sourcesContent":["import { TimelineMax as Timeline, Power1 } from 'gsap';\r\n\r\nconst getHomeTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  const bodyHome = document.querySelector('body');\r\n  const text1 = node.querySelector('#intro-text-one');\r\n  const text2 = node.querySelector('#intro-text-two');\r\n  const text3 = node.querySelector('#intro-text-three');\r\n\r\n  timeline\r\n    .from(node, 1, { display: 'none', autoAlpha: 0, delay })\r\n    .to(bodyHome, 2, { backgroundColor: '#444444' }, '-=2')\r\n    .staggerFrom(text1, .7, { autoAlpha: 0, x: -25, ease: Power1.easeOut }, 2 )\r\n    .staggerFrom(text2, 1, { autoAlpha: 0, x: -55, ease: Power1.easeOut }, 5, 3)\r\n    .staggerFrom(text3, 3, { autoAlpha: 0, x: -25, ease: Power1.easeOut }, 5, 5 );\r\n\r\n  return timeline;\r\n}\r\n\r\nconst getAboutTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  const octopusLeftSide = node.querySelector('.about-block-left');\r\n  const octopusRightSide = node.querySelector('.about-block-right');\r\n  const bodyAbout = document.querySelector('body');\r\n\r\n  timeline\r\n    .from(node, 1, { display: 'none', autoAlpha: 0, delay })\r\n    .to(bodyAbout, 2, { backgroundColor: '#0C0C21' }, '-=2' )\r\n    .from(octopusLeftSide, 0.275, { autoAlpha: 0, y: 650 , ease: Power1.easeOut } )\r\n    .from(octopusRightSide, 0.275, { autoAlpha: 0, y: 650 , ease: Power1.easeOut }, '-=0.275');\r\n\r\n  return timeline;\r\n}\r\n\r\nexport const play = (pathname, node, appears) => {\r\n  const delay = appears ? 0 : 0.5;\r\n  let timeline\r\n\r\n  if (pathname === '/')\r\n    timeline = getHomeTimeline(node, delay);\r\n  else if (pathname === '/about')\r\n    timeline = getAboutTimeline(node, delay);\r\n  else\r\n    timeline = getHomeTimeline(node, delay);\r\n\r\n  window\r\n    .loadPromise\r\n    .then(() => requestAnimationFrame(() => timeline.play()))\r\n}\r\n\r\nexport const exit = (node) => {\r\n  const timeline = new Timeline({ paused: true });\r\n\r\n  timeline.to(node, 0.15, { autoAlpha: 0, ease: Power1.easeOut });\r\n  timeline.play();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}